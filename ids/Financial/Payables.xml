<?xml version="1.0" encoding="UTF-8"?>
<idsDocument version="1.0.0" changeVersion="0" domain="Financial" type="xinstance"
			 name="Payables"  
	 		 elementOrder="MedicalFacility, MedicalOrganization, CostCenter, AccountCode, AccountName, PeriodStartDate, PeriodEndDate, 
					PeriodTypeCode, PlanningCategoryCode, PlanningSubCategoryCode, CurrencyCode, VendorCategoryCode,
					VendorSubCategoryCode, TotalPaid, TotalCreditsReceived, PayablesAging, PayablesAmounts"
			 >
	 		               	
	<changeLog>
		<change version="1.0.0">Initial</change>
	</changeLog>
	

	<include name="CommonElements"
			 prependToElementOrder="OmniStatus, OmniStatusReason, SourceName, SourceInstanceId, SourceInstanceIdName"
			 appendToElementOrder="SourceStatusCode, SourceCreatedDate, SourceCreatedBy, SourceModifiedDate, SourceModifiedBy"/>

	<notes> 
	 
	</notes>
			
	<documentation>
	Accounts Payable is money owed by a business to its suppliers/vendors for products and services purchased on credit.  
	It is shown as a liability on a company's balance sheet.  It differs from a Notes Payable liability which is a debt 
	created through a contract document to repay at specified date(s) usually including interest.  Payables enables the 
	customer to populate aggregated totals by aging bucket, populate individual payables or both. What information is supplied 
	is determined by the customer's reporting needs and desire for drill down.
	</documentation>

	<element name="MedicalFacility" type="link" contains="Facility">
		<documentation>
		Specifies the physical medical facility associated with the accounting transactions being reported.
		</documentation>
		
		<example>
			<Facility>
				<SourceName>TestSystem</SourceName>
				<SourceInstanceId>Hospital</SourceInstanceId>
			</Facility>
		</example>
	</element>

	<element name="MedicalOrganization" type="link" contains="Organization">
		<documentation>
		Specifies the medical organization associated with the accounting transactions being reported.
		</documentation>

		<example>
			<Organization>
				<SourceName>TestSystem</SourceName>
				<SourceInstanceId>Medical Center</SourceInstanceId>
			</Organization>
		</example>
			
	</element>

	<element name="CostCenter" type="link" contains="OrganizationalUnit">
		<documentation>
		An Organizational Unit is a specific group or entity for organizing or managing resources 
		within the enterprise.  Usually, these are made up of people or locations which cooperate 
		in specified objectives.  These may be Departments, Divisions, Nursing Units, Service Lines, 
		Regions, Cost Centers, etc.  A G/L Cost Center is a segment of an enterprise for which Accounting 
		is performed in the General Ledger.  G/L Cost Centers are arranged into a hierarchy which allows 
		roll-ups and drill-downs on financial information within the enterprise.  Low-level Cost Centers 
		may be Nursing Units if the hierarchy is based on physical location, or may be Service Specialty 
		if the hierarchy is based on Service Line.
		</documentation>
		
		<example>
			<OrganizationalUnit>
				<SourceName>TestSystem</SourceName>
				<SourceInstanceId>Accounting Department</SourceInstanceId>
			</OrganizationalUnit>
		</example>
	</element>
	
	<element name="AccountCode" type="string">
		<documentation>
		Identifies the code assigned to an account for tracking payables.
		</documentation>
		
		<example>
			<AccountCode>
				1345
			</AccountCode>
		</example>
	</element>

	<element name="AccountName" type="string">
		<documentation>
		Identifies the name assigned to an account for tracking payables.
		</documentation>
		
		<example>
			<AccountName>
				JohnDoeAccountName
			</AccountName>
		</example>
	</element>
	

	<element name="PeriodStartDate" type="datetime">
		<documentation>
		Contains the starting date for the payable transactions.
		</documentation>
		
		<example>
			<PeriodStartDate format="yyyy-MM-dd">
				2015-01-01
			</PeriodStartDate>
		</example>
	</element>
	<element name="PeriodEndDate" type="datetime">
		<documentation>
		Contains the ending date for the payable transactions.
		</documentation>
		
		<example>
			<PeriodEndDate format="yyyy-MM-dd">
				2015-02-02
			</PeriodEndDate>
		</example>
	</element>

	<element name="PeriodTypeCode" type="code">
		<documentation>
		Identifies the period of time for the payable transactions.
		</documentation>
		
		<example sourceName="TestSystem" codeSet="PeriodTypeCodes">
			Year
		</example>
	</element>

	<element name="PlanningCategoryCode" type="code">
		<documentation>
		These IDS's can be used to capture Actuals, Budgeted, Projected or Benchmarks 
		for any metric. A single IDS can be for only one Category/Subcategory combination. 
		If they report this at the departmental level, then each IDS represents one 
		Department/Category/Subcategory combination. The customer can generate these 
		at multiple levels if they so choose. IDS's at the facility level, or IDS's 
		down to the departmental level, or anything and everything in between. 
		As long as they are consistent, roll-ups and drill downs in the 
		marts will work properly. 
		
		For instance, FinancialReport IDS's are probably created as quarterlies. So at the beginning 
		of a fiscal year, the client might generate "Budgeted" FinancialReport IDS's for
		each of the four upcoming fiscal quarters. They might generate "Projected" 
		FinancialReport IDS's for out year quarters. The distinction between Budgeted 
		(near-term) and Projected (longer term) is generally accepted, 
		but how the customer uses these categories is up to them; they just 
		enable a means of making comparisons. 
	
		If they are so inclined, they might generate "Benchmark" FinancialReport IDS's 
		if say there is an industry formula for a hospital or department of their size. 
		Multiple benchmark IDS's might be generated for different percentiles, 
		if they exist or are calculable. Probably at the beginning of the fiscal year,
		or when industry benchmarks are issued.

		As they close each financial quarter, they will generate the "Actual" FinancialReport IDS.
		In BI, they will be able to compare the actual performance to budget, benchmark or whatever. 
		It is not even necessary that all actuals have corresponding budgeted, projected or benchmarks.
		
		For Receivables, these IDS's might be generated monthly or at whatever interval they choose. 
		The principal of the Planning Category and Sub Category remains the same. 
		The number of IDS's generated depends on the granularity in reporting they are looking for.
		</documentation>
		
		<example sourceName="TestSystem" codeSet="PlanningCategoryCode">
			Projected
		</example>
	</element>

	<element name="PlanningSubCategoryCode" type="code">
		<documentation>
		The Planning Subcategory provides a method to generate these Actuals, Budgeted, Projected or 
		Benchmarks IDS's for different percentiles, if they exist or are calculable.
		</documentation>
		
		<example sourceName="TestSystem" codeSet="PlanningSubCategoryCodes">
			50th percentile
		</example>
	</element>

	<element name="CurrencyCode" type="code">
		<documentation>
		Specifies the denomination for all amounts using the industry standard defined in
		the ISO 4217 code set.
		</documentation>
		
		<example sourceName="ISO4217" codeSet="CurrencyCode">
			USD
		</example>
	</element>

	<element name="VendorCategoryCode" type="code">
		<documentation>
		A vendor is a person or company that sells products or services.  Categories can be used to 
		define similar groups of vendors together such as those who sell medical supplies, medical equipment, 
		office supplies, office furniture, laundry services, food services, landscaping services, etc.
		</documentation>
		
		<example sourceName="TestSystem" codeSet="VendorCategoryCodes">
			Supplies
		</example>
	</element>

	<element name="VendorSubCategoryCode" type="code">
		<documentation>
		The vendor subcategory further categorizes the vendor.
		</documentation>
		
		<example sourceName="TestSystem" codeSet="VendorSubCategoryCode">
			Office Supplies
		</example>
	</element>

	<element name="TotalPaid" type="double">
		<documentation>
		Represents the total payables amount paid from the facility based on the planning and vendor 
		categories for a specific time period.
		</documentation>
		
		<example>
			<TotalPaid>
				500.00
			</TotalPaid>
		</example>
	</element>

	<element name="TotalCreditsReceived" type="double">
		<documentation>
		Represents the portion of the total payables amount paid that is credited to the account.
		</documentation>
		
		<example>
			<TotalCreditsReceived>
				400.00
			</TotalCreditsReceived>
		</example>
	</element>

	<list name="PayablesAging">
		<documentation>
		PayablesAging is a collection of PayableAging buckets.  Payables Aging is the process of determining 
		which suppliers are being paid on time, which are not, and how far their bills are behind the 
		payment due date.  This analysis indicates which suppliers must be paid first in order to 
		avoid any credit or supply problem.
		</documentation>
	
	<idsDocument version="1.0.0" changeVersion="0" domain="Financial" type="xinstance_child"
				 name="PayableAging"  
		 		 elementOrder="AgingCategoryCode, TotalPayables"
				 >
		<include name="CommonElements"
				 prependToElementOrder="OmniStatus, OmniStatusReason, SourceName, SourceInstanceId, SourceInstanceIdName"
				 appendToElementOrder="SourceStatusCode, SourceCreatedDate, SourceCreatedBy, SourceModifiedDate, SourceModifiedBy"/>		               	
		<changeLog>
			<change version="1.0.0">Initial</change>
		</changeLog>
	
		<notes> 
		</notes>
				
		<documentation>
		Payables Aging is the process of determining which suppliers are being paid on time, which are not, 
		and how far their bills are behind the payment due date.  This analysis indicates which suppliers 
		must be paid first in order to avoid any credit or supply problem.
		</documentation>
	
		<element name="AgingCategoryCode" type="code">
			<documentation>
			Categorizes the bucket of time to use in defining whether payables are being paid on time, which are not, 
			and how far their bills are behind the payment due date. 
			</documentation>
			
			<example sourceName="TestSystem" codeSet="AgingCategoryCodes">
				30 days	
			</example>
		</element>
	
		<element name="TotalPayables" type="double">
			<documentation>
			Represents the total payables amount due based on the bucket of time.
			</documentation>
			
			<example>
				<TotalPayables>
					500.00
				</TotalPayables>
			</example>
		</element>
	</idsDocument>
	
	</list>

	<list name="PayablesAmounts">
		<documentation>
		PayablesAmounts is a collection of PayableAmount instances which track money owed by a business to 
		its suppliers/vendors for products and services purchased on credit.  The supplier will send an invoice 
		to the customer for payment.  Suppliers offer various payment terms for an invoice such as a cash discount 
		for paying an invoice within a defined number of days.  For example, terms "1%, 30 Net 31" mean that the 
		customer will deduct 1% from the invoice if payment is made within 30 days. If the payment is made on 
		Day 31 then the full amount is paid.
		</documentation>
	
	<idsDocument version="1.0.0" changeVersion="0" domain="Financial" type="xinstance_child"
				 name="PayableAmount"  
		 		 elementOrder="Account, AccountNumber, InvoiceDate, PaymentDueDate, AmountDue, VendorId, VendorName"
				 >
		<include name="CommonElements"
				 prependToElementOrder="OmniStatus, OmniStatusReason, SourceName, SourceInstanceId, SourceInstanceIdName"
				 appendToElementOrder="SourceStatusCode, SourceCreatedDate, SourceCreatedBy, SourceModifiedDate, SourceModifiedBy"/> 		               	
		<changeLog>
			<change version="1.0.0">Initial</change>
		</changeLog>
	
		<notes> 
		</notes>
				
		<documentation>
		Payables Amount is money owed by a business to its suppliers/vendors for products and services purchased 
		on credit.  The supplier will send an invoice to the customer for payment.  Suppliers offer various 
		payment terms for an invoice such as a cash discount for paying an invoice within a defined number of days.  
		For example, terms "1%, 30 Net 31" mean that the customer will deduct 1% from the invoice if payment is 
		made within 30 days. If the payment is made on Day 31 then the full amount is paid.
		</documentation>
	
		<element name="Account" type="link" contains="Account">
			<documentation>
			An Account is a financial construct which accumulates charges in order to determine the amount to 
			be claimed from the payer(s) and/or billed to the patient or guarantor.  In addition to charges, 
			an account applies payments to reduce its remaining balance, adjustments to make corrections, etc.  
			If the Account IDS has not been implemented by the client, the AccountNumber attribute can be used.
			</documentation>
	
			<example>
				<Account>
					<SourceName>TestSystem</SourceName>
					<SourceInstanceId>JohnDoeAccount</SourceInstanceId>
				</Account>
			</example>			
		</element>
	
		<element name="AccountNumber" type="string">
			<documentation>
			Identifies the number of the account that payables are drawn from.  The AccountNumber attribute 
			should be used when the client hasn't implemented the Account IDS.
			</documentation>
			
			<example>
				<AccountNumber>
					1245
				</AccountNumber>
			</example>
		</element>
	
		<element name="InvoiceDate" type="datetime">
			<documentation>
			Contains the date the payment amount due was invoiced.
			</documentation>
			
			<example>
				<InvoiceDate format="yyyy-MM-dd">
					2015-01-01
				</InvoiceDate>
			</example>
		</element>
	
		<element name="PaymentDueDate" type="datetime">
			<documentation>
			Contains the date the payment amount  was due .
			</documentation>
			
			<example>
				<PaymentDueDate format="yyyy-MM-dd">
					2015-01-01
				</PaymentDueDate>
			</example>
		</element>	
	
		<element name="AmountDue" type="double">
			<documentation>
			Contains the payment amount that is due.
			</documentation>
			
			<example>
				<AmountDue>
					600.00
				</AmountDue>
			</example>
		</element>
	
		<element name="VendorId" type="string">
			<documentation>
			Identifies the supplier/vendor that is owed payment.  The VendorID attribute should be used 
			when the client hasn't implemented the Vendor IDS.
			</documentation>
			
			<example>
				<VendorId>
					678
				</VendorId>
			</example>
		</element>
	
		<element name="VendorName" type="string">
			<documentation>
			Specifies the name of the supplier/vendor that is owed payment.  The VendorName attribute should 
			be used when the client hasn't implemented the Vendor IDS.
			</documentation>
			
			<example>
				<VendorName>
					JohnDoePlumbingCompany
				</VendorName>
			</example>
		</element>
	<!-- 
		<element name="Vendor" type="link" contains="Vendor">
			<documentation>
			Identifies the supplier/vendor that is owed payment.  If the Vendor IDS has not been implemented 
			by the client, the VendorID and VendorName attributes can be used.
			</documentation>
	
			<example>
				<Vendor>
					<SourceName>TestSystem</SourceName>
					<SourceInstanceId>JohnDoePlumbing</SourceInstanceId>
				</Vendor>
			</example>			
		</element>	
	-->
	</idsDocument>
	
	</list>
</idsDocument>
